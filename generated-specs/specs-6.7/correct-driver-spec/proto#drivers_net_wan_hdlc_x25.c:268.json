{
  "open": {
    "filename": "/dev/net/tun",
    "fd_name": "fd_hdlc_x25",
    "spec": "openat$KGPT_net_tun(fd const[AT_FDCWD], file ptr[in, string[\"/dev/net/tun\"]], flags flags[open_flags], mode const[0]) fd_hdlc_x25"
  },
  "resources": {
    "fd_hdlc_x25": {
      "type": "fd",
      "spec": "resource fd_hdlc_x25[fd]"
    }
  },
  "path": "/scratch/xxxxxx-data/xxxxxx/linux/drivers/net/wan/hdlc_x25.c:268",
  "ioctls": {
    "IF_GET_PROTO": {
      "arg": "ptr[out, x25_hdlc_proto]",
      "arg_name_in_usage": "",
      "arg_inference": null
    },
    "IF_PROTO_X25": {
      "arg": "ptr[in, x25_hdlc_proto]",
      "arg_name_in_usage": "x25_s",
      "arg_inference": null
    }
  },
  "types": {
    "x25_hdlc_proto": "x25_hdlc_proto {\n\tdce\tint16\n\tmodulo\tint32\n\twindow\tint32\n\tt1\tint32\n\tt2\tint32\n\tn2\tint32\n}"
  },
  "existing_ioctls": {},
  "unknown_cmd_ioctls": {},
  "syscall_specs": {
    "openat$KGPT_net_tun": "openat$KGPT_net_tun(fd const[AT_FDCWD], file ptr[in, string[\"/dev/net/tun\"]], flags flags[open_flags], mode const[0]) fd_hdlc_x25",
    "ioctl$KGPT_IF_GET_PROTO": "ioctl$KGPT_IF_GET_PROTO(fd fd_hdlc_x25, cmd const[IF_GET_PROTO], arg ptr[out, x25_hdlc_proto])",
    "ioctl$KGPT_IF_PROTO_X25": "ioctl$KGPT_IF_PROTO_X25(fd fd_hdlc_x25, cmd const[IF_PROTO_X25], arg ptr[in, x25_hdlc_proto])"
  },
  "init_syscalls": [
    "openat$KGPT_net_tun"
  ],
  "includes": [
    "uapi/linux/fcntl.h",
    "uapi/linux/if.h"
  ],
  "unused_types": {},
  "ignored_types": {}
}